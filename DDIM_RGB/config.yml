### model params
Model:
  in_channels: 3
  out_channels: 3
  model_channels: 128
  attention_resolutions: [16, 8, 4, 2]
  num_res_blocks: 3
  dropout: 0.2
  channel_mult: [1, 2, 2, 2]
  conv_resample: True
  num_heads: 2

### dataset params
Dataset:
  # Deciding which dataset to use, must be one of {'mnist', 'cifar', 'custom'}.
  dataset: "custom"
  # If mnist and cifar datasets, whether to use the training set.
  train: True
  # Folder of data sets. When `dataset = custom`, this parameter can be a list with different folders.
  # Then all images in the list with suffixes in `suffix` in the folder will be loaded.
  data_path: "./data/crack/map"
  # If mnist and cifar datasets, whether to download it.
  download: True
  # If mnist dataset, image_size is [28, 28]. If cifar dataset, image_size is [32, 32]. If custom, specify as needed.
  image_size: [ 128, 128 ]

  # If custom dataset, what is the mode of the image. must be one of {'RGB', 'L', 'CMYK'}.
  mode: "RGB"
  # If custom dataset, decide what suffix to load for the image.
  suffix: ["png", "jpg"]

  # parameters for torch.utils.data.DataLoader
  batch_size: 4
  shuffle: True
  drop_last: True
  pin_memory: True
  num_workers: 2

### trainer params
Trainer:
  # sample time steps
  T: 1000
  beta: [0.0001, 0.02]


### callback params
Callback:
  # The save path for checkpoint.
  filepath: "./checkpoint/costum_map.pth"
  # Frequency of checkpoint saving.
  save_freq: 1

### train params
device: "cuda"
epochs: 10000
# Whether to continue training, True or False
consume: False
# If continue training, which checkpoint to load
consume_path: "./checkpoint/costum_map.pth"

### optimizer params
lr: 0.0002
